# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2.1
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.3-node-browsers
      - image: circleci/postgres:11.6-alpine
        environment:
          POSTGRES_DB: larasns
          POSTGRES_USER: default
          POSTGRES_PASSWORD: secret

    environment:
      APP_ENV: testing
      DB_CONNECTION: pgsql
      DB_HOST: loaclhost
      DB_PORT: 5432
      DB_DATABASE: larasns
      DB_USERNAME: default
      DB_PASSWORD: secret

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19

    steps:
      - checkout
      - restore_cache:
         key: composer-v1-{{ checksum "composer.lock" }}
      - run: composer install -n --prefer-dist
      - save_cache:
         key: composer-v1-{{ checksum "composer.lock" }}
         paths:
          - vendor
      - restore_cache:
         key: npm-v1-{{ checksum "package-lock.json" }}
      - run:
         name: npm ci
         command: |
          if [ ! -d node_modules ]; then
            npm ci
          fi
      - save_cache:
         key: npm-v1-{{ checksum "package-lock.json" }}
         paths:
          - node_modules
      - run: npm run dev
      - run:
         name: get ready for postgres
         command: |
          sudo apt-get update
          sudo apt-get install libpq-dev
          sudo docker-php-ext-install pdo_pgsql
          dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
         name: php test
         command: vendor/bin/phpunit
